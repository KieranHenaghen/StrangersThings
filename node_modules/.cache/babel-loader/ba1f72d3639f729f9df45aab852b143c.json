{"ast":null,"code":"var _jsxFileName = \"/home/kch/USD_Class_Course_Work/StrangersThings/src/components/SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = props => {\n  _s();\n\n  const {\n    post\n  } = props;\n  const [edit, setEdit] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [newPrice, setNewPrice] = useState('');\n  const [newLocation, setNewLocation] = useState('');\n  const [newWillDeliver, setNewWillDeliver] = useState(false);\n\n  const deletePost = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"account-token\")}`\n        }\n      });\n      const data = await response.json();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const editPost = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type': 'application.json',\n          'Authorization': `Bearer ${localStorage.getItem(\"account-token\")}`\n        },\n        body: JSON.stringify({\n          post: {\n            title: newTitle,\n            description: newDescription,\n            price: newPrice,\n            location: newLocation,\n            willDeliver: newWillDeliver\n          }\n        })\n      });\n      const data = await response.json();\n      setNewTitle('');\n      setNewDescription('');\n      setNewPrice('');\n      setNewLocation('');\n      setNewWillDeliver(false);\n      fetchAllPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), post.isAuthor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEdit(true),\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"edit-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTitle,\n        placeholder: \"New title\",\n        onChange: event => setNewTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: newDescription,\n        placeholder: \"New description\",\n        onChange: event => setNewDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPrice,\n        placeholder: \"New price\",\n        onChange: event => setNewPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newLocation,\n        placeholder: \"New location\",\n        onChange: event => setNewLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Will Deliver?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: newWillDeliver,\n        onChange: () => willDeliver == false ? setNewWillDeliver(true) : setNewWillDeliver(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editPost,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SinglePost, \"OEaZKFhnhVXERO3Rt3meH+nPyuY=\");\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/kch/USD_Class_Course_Work/StrangersThings/src/components/SinglePost.js"],"names":["React","useState","SinglePost","props","post","edit","setEdit","newTitle","setNewTitle","newDescription","setNewDescription","newPrice","setNewPrice","newLocation","setNewLocation","newWillDeliver","setNewWillDeliver","deletePost","response","fetch","BASE_URL","_id","method","headers","localStorage","getItem","data","json","err","console","log","editPost","body","JSON","stringify","title","description","price","location","willDeliver","fetchAllPosts","isAuthor","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nconst SinglePost = (props) => {\n    const { post } = props;\n    const [edit, setEdit] = useState(false);\n    const [newTitle, setNewTitle] = useState('');\n    const [newDescription, setNewDescription] = useState('');\n    const [newPrice, setNewPrice] = useState('');\n    const [newLocation, setNewLocation] = useState('');\n    const [newWillDeliver, setNewWillDeliver] = useState(false);\n\n    const deletePost = async () => {\n        try {\n            const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem(\"account-token\")}`\n                }\n\n            })\n            const data = await response.json();\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n    const editPost = async () => {\n        try {const response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application.json',\n                'Authorization': `Bearer ${localStorage.getItem(\"account-token\")}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: newTitle,\n                    description: newDescription,\n                    price: newPrice,\n                    location: newLocation,\n                    willDeliver: newWillDeliver\n                }\n            })\n        });\n            const data = await response.json();\n\n            setNewTitle('');\n            setNewDescription('');\n            setNewPrice('');\n            setNewLocation('');\n            setNewWillDeliver(false);\n            fetchAllPosts()\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n    return (\n        edit ? <div className=\"single-post\">\n            <div>\n                {post.title}\n            </div>\n            <div>\n                {post.description}\n            </div>\n            <div>\n                {post.price}\n            </div>\n            {\n                post.isAuthor ? <div>\n                    <button onClick={deletePost}>Delete Post</button>\n                    <button onClick={() => setEdit(true)}>Edit Post</button>\n                    </div> \n                : <button>Send Message</button>\n            }\n        </div>\n        : <div>\n            <form id=\"edit-post\">\n                <input type=\"text\" value={newTitle} placeholder=\"New title\" onChange={(event) => setNewTitle(event.target.value)}>\n\n                </input>\n                <textarea type=\"text\" value={newDescription} placeholder=\"New description\" onChange={(event) => setNewDescription(event.target.value)}>\n\n                </textarea>\n                <input type=\"text\" value={newPrice} placeholder=\"New price\" onChange={(event) => setNewPrice(event.target.value)}>\n\n                </input>\n                <input type=\"text\" value={newLocation} placeholder=\"New location\" onChange={(event) => setNewLocation(event.target.value)}>\n\n                </input>\n                <label>Will Deliver?</label>\n                <input type=\"checkbox\" value={newWillDeliver} onChange={() => willDeliver == false ? setNewWillDeliver(true) : setNewWillDeliver(false)}>\n\n                </input>\n                <button onClick={editPost}>\n                    Save Changes\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}