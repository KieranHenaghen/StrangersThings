{"ast":null,"code":"var _jsxFileName = \"/home/kch/USD_Class_Course_Work/StrangersThings/src/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const locallySourcedToken = localStorage.getItem(\"token\");\n    const response = await fetch(`${BASE_URL}/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': `Bearer ${locallySourcedToken}`\n      },\n      body: JSON.stringify({\n        post: {\n          title: title,\n          description: description,\n          priceOfItem: price,\n          location: location,\n          willDeliver: willDeliver\n        }\n      })\n    });\n    const data = response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        placeholder: \"Title\",\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: description,\n        placeholder: \"Description\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        placeholder: \"Price\",\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        placeholder: \"Location\",\n        onChange: event => setLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Will Deliver?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: willDeliver,\n        onChange: () => willDeliver == false ? setWillDeliver(true) : setWillDeliver(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"9Yz/EIm4whHgtgI7q4MdosibMgU=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/kch/USD_Class_Course_Work/StrangersThings/src/components/PostForm.js"],"names":["React","useState","PostForm","props","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","handleSubmit","event","preventDefault","locallySourcedToken","localStorage","getItem","response","fetch","BASE_URL","method","headers","body","JSON","stringify","post","priceOfItem","data","json","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst PostForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n    const [willDeliver, setWillDeliver] = useState(false);\n\n    const handleSubmit = async (event) => {\n\n        event.preventDefault();\n\n        const locallySourcedToken = localStorage.getItem(\"token\");\n        \n        const response = await fetch(`${BASE_URL}/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': \"application/json\",\n                'Authorization': `Bearer ${locallySourcedToken}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: title,\n                    description: description,\n                    priceOfItem: price,\n                    location: location,\n                    willDeliver: willDeliver\n                }\n            })\n        })\n        const data = response.json();\n\n    }\n\n    return (\n        <div>\n            <form id=\"create-post\">\n                <input type=\"text\" value={title} placeholder=\"Title\" onChange={(event) => setTitle(event.target.value)}>\n\n                </input>\n                <textarea type=\"text\" value={description} placeholder=\"Description\" onChange={(event) => setDescription(event.target.value)}>\n\n                </textarea>\n                <input type=\"text\" value={price} placeholder=\"Price\" onChange={(event) => setPrice(event.target.value)}>\n\n                </input>\n                <input type=\"text\" value={location} placeholder=\"Location\" onChange={(event) => setLocation(event.target.value)}>\n\n                </input>\n                <label>Will Deliver?</label>\n                <input type=\"checkbox\" value={willDeliver} onChange={() => willDeliver == false ? setWillDeliver(true) : setWillDeliver(false)}>\n\n                </input>\n            </form>\n        </div>\n    )\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}